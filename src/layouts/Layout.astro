---
import i18next from 'i18next';
import { SEO } from 'astro-seo';
import { HeadHrefLangs } from 'astro-i18next/components';

export interface Props {
  title?: string;
  frontmatter?: {
    title: string;
  };
}

const { title, frontmatter } = Astro.props;
import Navbar from '@/components/Navbar.astro';
import '@fontsource/inter';
---

<!DOCTYPE html>
<html lang={i18next.language}>
  <head>
    <!-- Meta Tags -->
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <SEO
      charset='UTF-8'
      title={frontmatter.title ? frontmatter.title : title}
      description={`Alice internationalized. An online, free to read version of Alice in Wonderland in multiple languages. All texts and images taken from Project Gutenberg.`}
      openGraph={{
        basic: {
          title: frontmatter.title ? frontmatter.title : title,
          type: 'website',
          image:
            'https://alice-abridged.vercel.app/_image?w=800&h=1094&ar=0.7312614259597806&href=%2Fimage%2Fhero.jpg',
        },
        image: {
          url: 'https://alice-abridged.vercel.app/_image?w=800&h=1094&ar=0.7312614259597806&href=%2Fimage%2Fhero.jpg',
          alt: 'Alice in the Room of the Duchess',
          type: 'jpg',
          width: 576,
          height: 796,
        },
      }}
      twitter={{
        title: 'Alice i18n',
        description: 'An internationalized Alice',
        image:
          'https://alice-abridged.vercel.app/_image?w=800&h=1094&ar=0.7312614259597806&href=%2Fimage%2Fhero.jpg',
        imageAlt: 'Alice in the Room of the Duchess',
      }}
      extend={{
        link: [{ rel: 'icon', href: '/favicon.ico' }],
      }}
    />
    <HeadHrefLangs />
    <!-- Theme Scripts -->
    <script is:inline>
      // ‚òùÔ∏è This script prevent the FART effect.
      if (localStorage.getItem('theme') === null) {
        let preference = window.matchMedia('(prefers-color-scheme: dark)');
        document.documentElement.setAttribute(
          'data-theme',
          preference ? 'dark' : 'light'
        );
      } else
        document.documentElement.setAttribute(
          'data-theme',
          localStorage.getItem('theme')
        );
      // "theme" LocalStorage value is set by the package to remember user preference.
      // The value is checked and applyed before rendering anything.
    </script>
    <script>
      import { themeChange } from 'theme-change';
      themeChange();
      // üëÜ you could import the CDN directly instead of these two lines
    </script>
  </head>
  <body class='flex flex-col place-content-center place-items-center'>
    <Navbar />
    <slot />
  </body>
</html>
